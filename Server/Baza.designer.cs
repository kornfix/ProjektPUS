#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Server
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="baza_danych")]
	public partial class BazaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertuzytkownicy(uzytkownicy instance);
    partial void Updateuzytkownicy(uzytkownicy instance);
    partial void Deleteuzytkownicy(uzytkownicy instance);
    partial void Insertplansze(plansze instance);
    partial void Updateplansze(plansze instance);
    partial void Deleteplansze(plansze instance);
    partial void Insertrozgrywki(rozgrywki instance);
    partial void Updaterozgrywki(rozgrywki instance);
    partial void Deleterozgrywki(rozgrywki instance);
    partial void Insertruchy_graczy(ruchy_graczy instance);
    partial void Updateruchy_graczy(ruchy_graczy instance);
    partial void Deleteruchy_graczy(ruchy_graczy instance);
    #endregion
		
		public BazaDataContext() : 
				base(global::Server.Properties.Settings.Default.baza_danychConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<uzytkownicy> uzytkownicy
		{
			get
			{
				return this.GetTable<uzytkownicy>();
			}
		}
		
		public System.Data.Linq.Table<plansze> plansze
		{
			get
			{
				return this.GetTable<plansze>();
			}
		}
		
		public System.Data.Linq.Table<rozgrywki> rozgrywki
		{
			get
			{
				return this.GetTable<rozgrywki>();
			}
		}
		
		public System.Data.Linq.Table<ruchy_graczy> ruchy_graczy
		{
			get
			{
				return this.GetTable<ruchy_graczy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uzytkownicy")]
	public partial class uzytkownicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_uzytkownika;
		
		private string _imie;
		
		private string _nazwisko;
		
		private string _email;
		
		private string _login;
		
		private string _haslo;
		
		private EntitySet<rozgrywki> _rozgrywki;
		
		private EntitySet<rozgrywki> _rozgrywki1;
		
		private EntitySet<ruchy_graczy> _ruchy_graczy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_uzytkownikaChanging(int value);
    partial void Onid_uzytkownikaChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnhasloChanging(string value);
    partial void OnhasloChanged();
    #endregion
		
		public uzytkownicy()
		{
			this._rozgrywki = new EntitySet<rozgrywki>(new Action<rozgrywki>(this.attach_rozgrywki), new Action<rozgrywki>(this.detach_rozgrywki));
			this._rozgrywki1 = new EntitySet<rozgrywki>(new Action<rozgrywki>(this.attach_rozgrywki1), new Action<rozgrywki>(this.detach_rozgrywki1));
			this._ruchy_graczy = new EntitySet<ruchy_graczy>(new Action<ruchy_graczy>(this.attach_ruchy_graczy), new Action<ruchy_graczy>(this.detach_ruchy_graczy));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_uzytkownika", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_uzytkownika
		{
			get
			{
				return this._id_uzytkownika;
			}
			set
			{
				if ((this._id_uzytkownika != value))
				{
					this.Onid_uzytkownikaChanging(value);
					this.SendPropertyChanging();
					this._id_uzytkownika = value;
					this.SendPropertyChanged("id_uzytkownika");
					this.Onid_uzytkownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_haslo", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string haslo
		{
			get
			{
				return this._haslo;
			}
			set
			{
				if ((this._haslo != value))
				{
					this.OnhasloChanging(value);
					this.SendPropertyChanging();
					this._haslo = value;
					this.SendPropertyChanged("haslo");
					this.OnhasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uzytkownicy_rozgrywki", Storage="_rozgrywki", ThisKey="id_uzytkownika", OtherKey="id_gracza_nr_dwa")]
		public EntitySet<rozgrywki> rozgrywki
		{
			get
			{
				return this._rozgrywki;
			}
			set
			{
				this._rozgrywki.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uzytkownicy_rozgrywki1", Storage="_rozgrywki1", ThisKey="id_uzytkownika", OtherKey="id_gracza_nr_jeden")]
		public EntitySet<rozgrywki> rozgrywki1
		{
			get
			{
				return this._rozgrywki1;
			}
			set
			{
				this._rozgrywki1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uzytkownicy_ruchy_graczy", Storage="_ruchy_graczy", ThisKey="id_uzytkownika", OtherKey="id_gracza")]
		public EntitySet<ruchy_graczy> ruchy_graczy
		{
			get
			{
				return this._ruchy_graczy;
			}
			set
			{
				this._ruchy_graczy.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rozgrywki(rozgrywki entity)
		{
			this.SendPropertyChanging();
			entity.uzytkownicy = this;
		}
		
		private void detach_rozgrywki(rozgrywki entity)
		{
			this.SendPropertyChanging();
			entity.uzytkownicy = null;
		}
		
		private void attach_rozgrywki1(rozgrywki entity)
		{
			this.SendPropertyChanging();
			entity.uzytkownicy1 = this;
		}
		
		private void detach_rozgrywki1(rozgrywki entity)
		{
			this.SendPropertyChanging();
			entity.uzytkownicy1 = null;
		}
		
		private void attach_ruchy_graczy(ruchy_graczy entity)
		{
			this.SendPropertyChanging();
			entity.uzytkownicy = this;
		}
		
		private void detach_ruchy_graczy(ruchy_graczy entity)
		{
			this.SendPropertyChanging();
			entity.uzytkownicy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.plansze")]
	public partial class plansze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_planszy;
		
		private int _wiersz;
		
		private int _kolumna;
		
		private string _sciezka_do_zdjecia;
		
		private int _id_gry;
		
		private EntityRef<rozgrywki> _rozgrywki;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_planszyChanging(int value);
    partial void Onid_planszyChanged();
    partial void OnwierszChanging(int value);
    partial void OnwierszChanged();
    partial void OnkolumnaChanging(int value);
    partial void OnkolumnaChanged();
    partial void Onsciezka_do_zdjeciaChanging(string value);
    partial void Onsciezka_do_zdjeciaChanged();
    partial void Onid_gryChanging(int value);
    partial void Onid_gryChanged();
    #endregion
		
		public plansze()
		{
			this._rozgrywki = default(EntityRef<rozgrywki>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_planszy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_planszy
		{
			get
			{
				return this._id_planszy;
			}
			set
			{
				if ((this._id_planszy != value))
				{
					this.Onid_planszyChanging(value);
					this.SendPropertyChanging();
					this._id_planszy = value;
					this.SendPropertyChanged("id_planszy");
					this.Onid_planszyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wiersz", DbType="Int NOT NULL")]
		public int wiersz
		{
			get
			{
				return this._wiersz;
			}
			set
			{
				if ((this._wiersz != value))
				{
					this.OnwierszChanging(value);
					this.SendPropertyChanging();
					this._wiersz = value;
					this.SendPropertyChanged("wiersz");
					this.OnwierszChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kolumna", DbType="Int NOT NULL")]
		public int kolumna
		{
			get
			{
				return this._kolumna;
			}
			set
			{
				if ((this._kolumna != value))
				{
					this.OnkolumnaChanging(value);
					this.SendPropertyChanging();
					this._kolumna = value;
					this.SendPropertyChanged("kolumna");
					this.OnkolumnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sciezka_do_zdjecia", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string sciezka_do_zdjecia
		{
			get
			{
				return this._sciezka_do_zdjecia;
			}
			set
			{
				if ((this._sciezka_do_zdjecia != value))
				{
					this.Onsciezka_do_zdjeciaChanging(value);
					this.SendPropertyChanging();
					this._sciezka_do_zdjecia = value;
					this.SendPropertyChanged("sciezka_do_zdjecia");
					this.Onsciezka_do_zdjeciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gry", DbType="Int NOT NULL")]
		public int id_gry
		{
			get
			{
				return this._id_gry;
			}
			set
			{
				if ((this._id_gry != value))
				{
					if (this._rozgrywki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gryChanging(value);
					this.SendPropertyChanging();
					this._id_gry = value;
					this.SendPropertyChanged("id_gry");
					this.Onid_gryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rozgrywki_plansze", Storage="_rozgrywki", ThisKey="id_gry", OtherKey="id_gry", IsForeignKey=true)]
		public rozgrywki rozgrywki
		{
			get
			{
				return this._rozgrywki.Entity;
			}
			set
			{
				rozgrywki previousValue = this._rozgrywki.Entity;
				if (((previousValue != value) 
							|| (this._rozgrywki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rozgrywki.Entity = null;
						previousValue.plansze.Remove(this);
					}
					this._rozgrywki.Entity = value;
					if ((value != null))
					{
						value.plansze.Add(this);
						this._id_gry = value.id_gry;
					}
					else
					{
						this._id_gry = default(int);
					}
					this.SendPropertyChanged("rozgrywki");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rozgrywki")]
	public partial class rozgrywki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_gry;
		
		private System.DateTime _data;
		
		private string _status;
		
		private string _wynik;
		
		private int _id_gracza_nr_jeden;
		
		private int _id_gracza_nr_dwa;
		
		private EntitySet<plansze> _plansze;
		
		private EntitySet<ruchy_graczy> _ruchy_graczy;
		
		private EntityRef<uzytkownicy> _uzytkownicy;
		
		private EntityRef<uzytkownicy> _uzytkownicy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_gryChanging(int value);
    partial void Onid_gryChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnwynikChanging(string value);
    partial void OnwynikChanged();
    partial void Onid_gracza_nr_jedenChanging(int value);
    partial void Onid_gracza_nr_jedenChanged();
    partial void Onid_gracza_nr_dwaChanging(int value);
    partial void Onid_gracza_nr_dwaChanged();
    #endregion
		
		public rozgrywki()
		{
			this._plansze = new EntitySet<plansze>(new Action<plansze>(this.attach_plansze), new Action<plansze>(this.detach_plansze));
			this._ruchy_graczy = new EntitySet<ruchy_graczy>(new Action<ruchy_graczy>(this.attach_ruchy_graczy), new Action<ruchy_graczy>(this.detach_ruchy_graczy));
			this._uzytkownicy = default(EntityRef<uzytkownicy>);
			this._uzytkownicy1 = default(EntityRef<uzytkownicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gry", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_gry
		{
			get
			{
				return this._id_gry;
			}
			set
			{
				if ((this._id_gry != value))
				{
					this.Onid_gryChanging(value);
					this.SendPropertyChanging();
					this._id_gry = value;
					this.SendPropertyChanged("id_gry");
					this.Onid_gryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wynik", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string wynik
		{
			get
			{
				return this._wynik;
			}
			set
			{
				if ((this._wynik != value))
				{
					this.OnwynikChanging(value);
					this.SendPropertyChanging();
					this._wynik = value;
					this.SendPropertyChanged("wynik");
					this.OnwynikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gracza_nr_jeden", DbType="Int NOT NULL")]
		public int id_gracza_nr_jeden
		{
			get
			{
				return this._id_gracza_nr_jeden;
			}
			set
			{
				if ((this._id_gracza_nr_jeden != value))
				{
					if (this._uzytkownicy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gracza_nr_jedenChanging(value);
					this.SendPropertyChanging();
					this._id_gracza_nr_jeden = value;
					this.SendPropertyChanged("id_gracza_nr_jeden");
					this.Onid_gracza_nr_jedenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gracza_nr_dwa", DbType="Int NOT NULL")]
		public int id_gracza_nr_dwa
		{
			get
			{
				return this._id_gracza_nr_dwa;
			}
			set
			{
				if ((this._id_gracza_nr_dwa != value))
				{
					if (this._uzytkownicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gracza_nr_dwaChanging(value);
					this.SendPropertyChanging();
					this._id_gracza_nr_dwa = value;
					this.SendPropertyChanged("id_gracza_nr_dwa");
					this.Onid_gracza_nr_dwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rozgrywki_plansze", Storage="_plansze", ThisKey="id_gry", OtherKey="id_gry")]
		public EntitySet<plansze> plansze
		{
			get
			{
				return this._plansze;
			}
			set
			{
				this._plansze.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rozgrywki_ruchy_graczy", Storage="_ruchy_graczy", ThisKey="id_gry", OtherKey="id_gry")]
		public EntitySet<ruchy_graczy> ruchy_graczy
		{
			get
			{
				return this._ruchy_graczy;
			}
			set
			{
				this._ruchy_graczy.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uzytkownicy_rozgrywki", Storage="_uzytkownicy", ThisKey="id_gracza_nr_dwa", OtherKey="id_uzytkownika", IsForeignKey=true)]
		public uzytkownicy uzytkownicy
		{
			get
			{
				return this._uzytkownicy.Entity;
			}
			set
			{
				uzytkownicy previousValue = this._uzytkownicy.Entity;
				if (((previousValue != value) 
							|| (this._uzytkownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uzytkownicy.Entity = null;
						previousValue.rozgrywki.Remove(this);
					}
					this._uzytkownicy.Entity = value;
					if ((value != null))
					{
						value.rozgrywki.Add(this);
						this._id_gracza_nr_dwa = value.id_uzytkownika;
					}
					else
					{
						this._id_gracza_nr_dwa = default(int);
					}
					this.SendPropertyChanged("uzytkownicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uzytkownicy_rozgrywki1", Storage="_uzytkownicy1", ThisKey="id_gracza_nr_jeden", OtherKey="id_uzytkownika", IsForeignKey=true)]
		public uzytkownicy uzytkownicy1
		{
			get
			{
				return this._uzytkownicy1.Entity;
			}
			set
			{
				uzytkownicy previousValue = this._uzytkownicy1.Entity;
				if (((previousValue != value) 
							|| (this._uzytkownicy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uzytkownicy1.Entity = null;
						previousValue.rozgrywki1.Remove(this);
					}
					this._uzytkownicy1.Entity = value;
					if ((value != null))
					{
						value.rozgrywki1.Add(this);
						this._id_gracza_nr_jeden = value.id_uzytkownika;
					}
					else
					{
						this._id_gracza_nr_jeden = default(int);
					}
					this.SendPropertyChanged("uzytkownicy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_plansze(plansze entity)
		{
			this.SendPropertyChanging();
			entity.rozgrywki = this;
		}
		
		private void detach_plansze(plansze entity)
		{
			this.SendPropertyChanging();
			entity.rozgrywki = null;
		}
		
		private void attach_ruchy_graczy(ruchy_graczy entity)
		{
			this.SendPropertyChanging();
			entity.rozgrywki = this;
		}
		
		private void detach_ruchy_graczy(ruchy_graczy entity)
		{
			this.SendPropertyChanging();
			entity.rozgrywki = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ruchy_graczy")]
	public partial class ruchy_graczy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ruchu;
		
		private int _nr_ruchu;
		
		private string _ruch;
		
		private int _id_gracza;
		
		private int _id_gry;
		
		private EntityRef<uzytkownicy> _uzytkownicy;
		
		private EntityRef<rozgrywki> _rozgrywki;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ruchuChanging(int value);
    partial void Onid_ruchuChanged();
    partial void Onnr_ruchuChanging(int value);
    partial void Onnr_ruchuChanged();
    partial void OnruchChanging(string value);
    partial void OnruchChanged();
    partial void Onid_graczaChanging(int value);
    partial void Onid_graczaChanged();
    partial void Onid_gryChanging(int value);
    partial void Onid_gryChanged();
    #endregion
		
		public ruchy_graczy()
		{
			this._uzytkownicy = default(EntityRef<uzytkownicy>);
			this._rozgrywki = default(EntityRef<rozgrywki>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ruchu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ruchu
		{
			get
			{
				return this._id_ruchu;
			}
			set
			{
				if ((this._id_ruchu != value))
				{
					this.Onid_ruchuChanging(value);
					this.SendPropertyChanging();
					this._id_ruchu = value;
					this.SendPropertyChanged("id_ruchu");
					this.Onid_ruchuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_ruchu", DbType="Int NOT NULL")]
		public int nr_ruchu
		{
			get
			{
				return this._nr_ruchu;
			}
			set
			{
				if ((this._nr_ruchu != value))
				{
					this.Onnr_ruchuChanging(value);
					this.SendPropertyChanging();
					this._nr_ruchu = value;
					this.SendPropertyChanged("nr_ruchu");
					this.Onnr_ruchuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ruch", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ruch
		{
			get
			{
				return this._ruch;
			}
			set
			{
				if ((this._ruch != value))
				{
					this.OnruchChanging(value);
					this.SendPropertyChanging();
					this._ruch = value;
					this.SendPropertyChanged("ruch");
					this.OnruchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gracza", DbType="Int NOT NULL")]
		public int id_gracza
		{
			get
			{
				return this._id_gracza;
			}
			set
			{
				if ((this._id_gracza != value))
				{
					if (this._uzytkownicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_graczaChanging(value);
					this.SendPropertyChanging();
					this._id_gracza = value;
					this.SendPropertyChanged("id_gracza");
					this.Onid_graczaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gry", DbType="Int NOT NULL")]
		public int id_gry
		{
			get
			{
				return this._id_gry;
			}
			set
			{
				if ((this._id_gry != value))
				{
					if (this._rozgrywki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gryChanging(value);
					this.SendPropertyChanging();
					this._id_gry = value;
					this.SendPropertyChanged("id_gry");
					this.Onid_gryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uzytkownicy_ruchy_graczy", Storage="_uzytkownicy", ThisKey="id_gracza", OtherKey="id_uzytkownika", IsForeignKey=true)]
		public uzytkownicy uzytkownicy
		{
			get
			{
				return this._uzytkownicy.Entity;
			}
			set
			{
				uzytkownicy previousValue = this._uzytkownicy.Entity;
				if (((previousValue != value) 
							|| (this._uzytkownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uzytkownicy.Entity = null;
						previousValue.ruchy_graczy.Remove(this);
					}
					this._uzytkownicy.Entity = value;
					if ((value != null))
					{
						value.ruchy_graczy.Add(this);
						this._id_gracza = value.id_uzytkownika;
					}
					else
					{
						this._id_gracza = default(int);
					}
					this.SendPropertyChanged("uzytkownicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rozgrywki_ruchy_graczy", Storage="_rozgrywki", ThisKey="id_gry", OtherKey="id_gry", IsForeignKey=true)]
		public rozgrywki rozgrywki
		{
			get
			{
				return this._rozgrywki.Entity;
			}
			set
			{
				rozgrywki previousValue = this._rozgrywki.Entity;
				if (((previousValue != value) 
							|| (this._rozgrywki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rozgrywki.Entity = null;
						previousValue.ruchy_graczy.Remove(this);
					}
					this._rozgrywki.Entity = value;
					if ((value != null))
					{
						value.ruchy_graczy.Add(this);
						this._id_gry = value.id_gry;
					}
					else
					{
						this._id_gry = default(int);
					}
					this.SendPropertyChanged("rozgrywki");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
